// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NEWHIRES.DAL;

namespace NEWHIRES.Migrations
{
    [DbContext(typeof(NHDBContext))]
    partial class NHDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NEWHIRES.DAL.Address", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address_1")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Address_2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("AppID");

                    b.Property<string>("Cellphone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Telephone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TimeAtAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.HasIndex("AppID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("NEWHIRES.DAL.ApplicationInfo", b =>
                {
                    b.Property<int>("AppID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AppDate")
                        .HasColumnType("date");

                    b.Property<int?>("AppStatus");

                    b.Property<string>("AppType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MaidenName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("AppID");

                    b.ToTable("ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.ApplicationWaiver", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppCompletedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("AppID");

                    b.Property<string>("AppWaiverSignDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AppWaiverSignature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ContactPrevEmployer")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Self_CompletedApp")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("EntryID")
                        .HasName("PK_Waiver");

                    b.HasIndex("AppID");

                    b.ToTable("ApplicationWaiver");
                });

            modelBuilder.Entity("NEWHIRES.DAL.BackgroundInfo", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AFBranch")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("AppID");

                    b.Property<string>("ArmedForces")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CompanyPrevEmpDetails")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("CompanyPrevEmployee")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ExplainFelonyMisdemeanor")
                        .HasMaxLength(130)
                        .IsUnicode(false);

                    b.Property<string>("HasFelonyMisdemeanor")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("HasSpecialLicense")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("IsFirstEmployment")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("NationalGuard")
                        .HasMaxLength(5);

                    b.Property<string>("SpecialLicDetails")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Specialty")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.HasIndex("AppID");

                    b.ToTable("BackgroundInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.DOT", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppID");

                    b.Property<bool?>("DOT_Positive_Refusal");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("NoDOT_Past2Yrs")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PrevEmployers4DOT")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("eSignature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.ToTable("DOT");
                });

            modelBuilder.Entity("NEWHIRES.DAL.DirectDeposit", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcctNo_1")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("AcctNo_2")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("AcctType_1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AcctType_2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("AppID");

                    b.Property<string>("Bank_1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Bank_2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Deposit_1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Deposit_2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpSignDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmpSignature")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("RoutingNo_1")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("RoutingNo_2")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.HasIndex("AppID");

                    b.ToTable("DirectDeposit");
                });

            modelBuilder.Entity("NEWHIRES.DAL.DrivingLicense", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppID");

                    b.Property<DateTime?>("DL_Expiration")
                        .HasColumnType("date");

                    b.Property<string>("DL_Number")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("DL_State")
                        .HasMaxLength(10);

                    b.Property<string>("DL_Type")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HasValid_DL")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("NoDL_Acknowledged")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.HasIndex("AppID");

                    b.ToTable("DrivingLicense");
                });

            modelBuilder.Entity("NEWHIRES.DAL.EmergencyContacts", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppID");

                    b.Property<string>("Cell")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Contact_Name")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Notes")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Relationship")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.HasIndex("AppID");

                    b.ToTable("EmergencyContacts");
                });

            modelBuilder.Entity("NEWHIRES.DAL.Employer", b =>
                {
                    b.Property<int>("EmployerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Contact_Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Contact_Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Contact_Position")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmployerName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumbers")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("EmployerID");

                    b.ToTable("Employer");
                });

            modelBuilder.Entity("NEWHIRES.DAL.EmploymentRecord", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppID");

                    b.Property<string>("ApprenticeRate")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ApprenticeYear")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Benefits_401K")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Benefits_Dental")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Benefits_Life")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Benefits_Medical")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Benefits_Supplemental")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CardNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("CheckDeliveryLocation")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("CheckEmail")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("Classification")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Division")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EEO_Ethnicity")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EEO_Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HireDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("HomeLocal")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("IsReferralAttached")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("JobLocal")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("OtherClassification")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("PaycheckDelivery")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Provide_EEO")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Trade")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.HasIndex("AppID");

                    b.ToTable("EmploymentRecord");
                });

            modelBuilder.Entity("NEWHIRES.DAL.EmploymentScreening", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppID");

                    b.Property<string>("FelonyOrMisdemeanor")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("FelonyOrMisdemeanorDesc")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("OtherLastName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("ScreenerID");

                    b.Property<string>("SignatureDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("eSSignature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.HasIndex("AppID");

                    b.ToTable("EmploymentScreening");
                });

            modelBuilder.Entity("NEWHIRES.DAL.FormsAcknowledgement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppID");

                    b.Property<int?>("FormID");

                    b.Property<bool?>("FormStatus");

                    b.Property<string>("eSignature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("eSignatureDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.ToTable("FormsAcknowledgement");
                });

            modelBuilder.Entity("NEWHIRES.DAL.I_9_Documents", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppID");

                    b.Property<byte[]>("DocData");

                    b.Property<int?>("Section2ID");

                    b.HasKey("ID");

                    b.HasIndex("Section2ID");

                    b.ToTable("I-9_Documents");
                });

            modelBuilder.Entity("NEWHIRES.DAL.I_9_Section_1", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppID");

                    b.Property<string>("CountryOfIssuance")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("OtherLastName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PrepareSignature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PreparerAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("PreparerCity")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PreparerFirstname")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PreparerLastName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PreparerSignatureDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PreparerState")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("PreparerZip")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("Res_AdmissionDoc")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Res_DocumentExpiration")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Res_DocumentNumber_3")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Res_DocumentType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Self_Prepared")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("SignatureDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("eSignature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EntryID")
                        .HasName("PK_Employment_Eligibility");

                    b.HasIndex("AppID");

                    b.ToTable("I-9_Section_1");
                });

            modelBuilder.Entity("NEWHIRES.DAL.I_9_Section_2", b =>
                {
                    b.Property<int>("EntryID");

                    b.Property<int?>("AppID");

                    b.Property<string>("AuthorizedRep_FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AuthorizedRep_LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AuthorizedRep_SignDate")
                        .HasColumnType("date");

                    b.Property<string>("AuthorizedRep_Signature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AuthorizedRep_Title")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Doc_ExpirationDate")
                        .HasColumnType("date");

                    b.Property<string>("Doc_List")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Doc_Number")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Doc_Title")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("IssuingAuthority")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Notes")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.ToTable("I-9_Section_2");
                });

            modelBuilder.Entity("NEWHIRES.DAL.I_9_Section_3", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppID");

                    b.Property<string>("AuthorizedRep_LastName")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("AuthorizedRep_SignDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AuthorizedRep_Signature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DocumentTitle")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ExpirationDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RehireDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.ToTable("I-9_Section_3");
                });

            modelBuilder.Entity("NEWHIRES.DAL.JobSetup", b =>
                {
                    b.Property<int>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppType")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("AuditTrail")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<bool?>("IsDOT_required");

                    b.Property<string>("JobNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("JobStatus");

                    b.Property<string>("SetupBy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SetupDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("WorkState")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("JobID")
                        .HasName("PK__JobSetup__056690E28CBC8B8E");

                    b.ToTable("JobSetup");
                });

            modelBuilder.Entity("NEWHIRES.DAL.Pre_Emp_DrugTest", b =>
                {
                    b.Property<int>("PID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppID");

                    b.Property<string>("ApplicantSignature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("HasAgreed")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SignatureDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Witness")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("PID")
                        .HasName("PK_tbl_Pre_Emp_DrugTest");

                    b.ToTable("Pre_Emp_DrugTest");
                });

            modelBuilder.Entity("NEWHIRES.DAL.PreviousEmployer", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppID");

                    b.Property<string>("BusinessAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmployerName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("JobDuties")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("JobTitle")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("ReasonForLeaving")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("Supervisor")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("EntryID")
                        .HasName("PK__tbl_Prev__3214EC2702DB990D");

                    b.HasIndex("AppID");

                    b.ToTable("PreviousEmployer");
                });

            modelBuilder.Entity("NEWHIRES.DAL.ScreeningCompany", b =>
                {
                    b.Property<int>("ScreenerID");

                    b.Property<string>("Address")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("date");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ScreenerID");

                    b.ToTable("ScreeningCompany");
                });

            modelBuilder.Entity("NEWHIRES.DAL.TrainingCourses", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int?>("CourseOrder");

                    b.Property<bool>("IsActive");

                    b.HasKey("CourseID");

                    b.ToTable("TrainingCourses");
                });

            modelBuilder.Entity("NEWHIRES.DAL.TrainingDocumentation", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppID");

                    b.Property<string>("AppSignatureDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("ApplicantSignature")
                        .HasColumnType("image");

                    b.Property<string>("Trainer")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.ToTable("TrainingDocumentation");
                });

            modelBuilder.Entity("NEWHIRES.DAL.TrainingQuestions", b =>
                {
                    b.Property<int>("QuestID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ActiveQuestion");

                    b.Property<string>("CorrectAnswer")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("CourseID");

                    b.Property<string>("Explanation")
                        .IsUnicode(false);

                    b.Property<string>("Question")
                        .IsUnicode(false);

                    b.Property<int?>("QuestionNum");

                    b.HasKey("QuestID");

                    b.HasIndex("CourseID");

                    b.ToTable("TrainingQuestions");
                });

            modelBuilder.Entity("NEWHIRES.DAL.TrainingResultsDetails", b =>
                {
                    b.Property<int>("DetailsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("AppID");

                    b.Property<int?>("CourseID");

                    b.Property<int?>("QuestID");

                    b.HasKey("DetailsID");

                    b.ToTable("TrainingResultsDetails");
                });

            modelBuilder.Entity("NEWHIRES.DAL.TrainingResultsSummary", b =>
                {
                    b.Property<int>("SummaryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acknowledge")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<int>("AppID");

                    b.Property<int>("CourseID");

                    b.Property<int>("NumCorrect");

                    b.Property<int>("TotalQuestions");

                    b.Property<string>("TrainDate")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("SummaryID");

                    b.ToTable("TrainingResultsSummary");
                });

            modelBuilder.Entity("NEWHIRES.DAL.W4Info", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AdditionalAmt")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<int?>("Allowances");

                    b.Property<int>("AppID");

                    b.Property<string>("EmpSignDate")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("EmpSignature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Filing")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("LastNameDifferent")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("WithholdExempt")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("EntryID");

                    b.ToTable("W4Info");
                });

            modelBuilder.Entity("NEWHIRES.DAL.Address", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "App")
                        .WithMany("Address")
                        .HasForeignKey("AppID")
                        .HasConstraintName("FK_Address_ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.ApplicationWaiver", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "App")
                        .WithMany("ApplicationWaiver")
                        .HasForeignKey("AppID")
                        .HasConstraintName("FK_ApplicationWaiver_ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.BackgroundInfo", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "App")
                        .WithMany("BackgroundInfo")
                        .HasForeignKey("AppID")
                        .HasConstraintName("FK_BackgroundInfo_ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.DOT", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "Entry")
                        .WithOne("DOT")
                        .HasForeignKey("NEWHIRES.DAL.DOT", "EntryID")
                        .HasConstraintName("FK_DOT_ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.DirectDeposit", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "App")
                        .WithMany("DirectDeposit")
                        .HasForeignKey("AppID")
                        .HasConstraintName("FK_DirectDeposit_ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.DrivingLicense", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "App")
                        .WithMany("DrivingLicense")
                        .HasForeignKey("AppID")
                        .HasConstraintName("FK_DrivingLicense_ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.EmergencyContacts", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "App")
                        .WithMany("EmergencyContacts")
                        .HasForeignKey("AppID")
                        .HasConstraintName("FK_EmergencyContacts_ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.EmploymentRecord", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "App")
                        .WithMany("EmploymentRecord")
                        .HasForeignKey("AppID")
                        .HasConstraintName("FK_EmploymentRecord_ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.EmploymentScreening", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "App")
                        .WithMany("EmploymentScreening")
                        .HasForeignKey("AppID")
                        .HasConstraintName("FK_EmploymentScreening_ApplicationInfo1");
                });

            modelBuilder.Entity("NEWHIRES.DAL.I_9_Documents", b =>
                {
                    b.HasOne("NEWHIRES.DAL.I_9_Section_2", "Section2")
                        .WithMany("I_9_Documents")
                        .HasForeignKey("Section2ID")
                        .HasConstraintName("FK_I-9_Documents_I-9_Section_2");
                });

            modelBuilder.Entity("NEWHIRES.DAL.I_9_Section_1", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "App")
                        .WithMany("I_9_Section_1")
                        .HasForeignKey("AppID")
                        .HasConstraintName("FK_I-9_Section_1_ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.PreviousEmployer", b =>
                {
                    b.HasOne("NEWHIRES.DAL.ApplicationInfo", "App")
                        .WithMany("PreviousEmployer")
                        .HasForeignKey("AppID")
                        .HasConstraintName("FK_PreviousEmployer_ApplicationInfo");
                });

            modelBuilder.Entity("NEWHIRES.DAL.TrainingQuestions", b =>
                {
                    b.HasOne("NEWHIRES.DAL.TrainingCourses", "Course")
                        .WithMany("TrainingQuestions")
                        .HasForeignKey("CourseID")
                        .HasConstraintName("FK_TrainingQuestions_TrainingCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
